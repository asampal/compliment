* Compliment [[https://travis-ci.org/alexander-yakushev/compliment/][https://travis-ci.org/alexander-yakushev/compliment.svg?branch=master]] [[https://coveralls.io/r/alexander-yakushev/compliment?branch=master][https://coveralls.io/repos/alexander-yakushev/compliment/badge.svg?branch=master]] [[http://jarkeeper.com/alexander-yakushev/compliment][http://jarkeeper.com/alexander-yakushev/compliment/status.png]]

  Compliment is a state-of-the-art Clojure completion library. It provides a
  fast, smart and extensible solution to complete vars, namespaces, class
  members, local bindings and whatever else custom sources can implement.

  Compliment is used as a completion backend in the following editors/IDEs:

  - Emacs --- [[https://github.com/clojure-emacs/cider][CIDER]] (with [[https://github.com/clojure-emacs/ac-cider][ac-cider]])
  - Vim --- [[https://github.com/tpope/vim-fireplace][vim-fireplace]]
  - [[https://nightcode.info/][Nightcode]]
  - [[https://github.com/jasongilman/proto-repl][Proto REPL]]

  Also, I am so glad you came here. You look gorgeous today.

** Rationale

   I wrote Compliment specifically for you because you are amazing and I believe
   you deserve a matching completion lib. Here are the features it boasts:

   - *Speed.* Your time is too precious to wait for completion to happen.
     Compliment is designed to be fast and is carefully benchmarked to make sure
     no sudden performance drops appear. It allows Compliment to work
     effectively even on [[http://clojure-android.info][Android]].
   - *Smart completion.* Such a smart person like you is entitled to completion
     being smart as well. Default Compliment sources use various techniques to
     give more meaningful completion depending on the context, and allow some
     fuzziness in prefix.
   - *Extensibility.* Your insatiable passion for exploration won't be satisfied
     by a set in stone completion list. For this reason Compliment allows every
     library developer to write custom sources, so later other users of the
     library will have better experience utilizing it.

** Installation

   If you use Nightcode or vim-fireplace then you don't have to install anything
   at all --- Compliment will be already there for you. In case you are
   Emacs+CIDER user there are two completion frontends to choose from:

   - [[http://www.emacswiki.org/emacs/AutoComplete][auto-complete]] --- you will also have to install [[https://github.com/clojure-emacs/ac-cider][ac-cider]] for Compliment to
     work.
   - [[http://company-mode.github.io/][company-mode]] --- CIDER has built-in support for company-mode completion,
     but it lacks documentation tooltips for candidates.

   If you need Compliment embedded directly into your program then add this to
   the =:dependencies=:

   [[https://clojars.org/compliment][https://clojars.org/compliment/latest-version.svg]]

** Examples

   [[https://github.com/alexander-yakushev/compliment/wiki/Examples][Here]] you can find examples of different completion scenarios
   Compliment supports so far.

** For developers

   See the test files to get an idea how public API and completion sources work.

   To understand what is a context and how it works see [[https://github.com/alexander-yakushev/compliment/wiki/Context][Context]] wiki
   page.

   How to write your own sources is explained on [[https://github.com/alexander-yakushev/compliment/wiki/Custom-sources][Custom sources]] page.

** Changelog

   You can view the significant changes on the [[https://github.com/alexander-yakushev/compliment/releases][Releases]] page.

** License

   Copyright Â© 2013-2015 Alexander Yakushev. Distributed under the Eclipse
   Public License, the same as Clojure. See [[https://github.com/alexander-yakushev/compliment/blob/master/LICENSE][LICENSE]].
